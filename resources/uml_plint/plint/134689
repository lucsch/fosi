format 75
"core" // src::core
  revision 1
  modified_by 33 "lucien"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/Users/lucien/DATA/PROGRAMATION/fosi/trunk_fosi/src/core/"
  cpp_src_dir "/Users/lucien/DATA/PROGRAMATION/fosi/trunk_fosi/src/core/"
  classview 134689 "core"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 135201 "ParFit"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 146721 "maxiter"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 146849 "tolerance"
	public explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 146977 "maxThickness"
	public explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 147105 "bSlopeLimit"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 147233 "dSlopeLimit"
	public explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 147361 "deepening"
	public explicit_type "<complex type>"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}enum  {normal, notDeepening, lowerLimit} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 147489 "mindiff"
	public explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 147617 "returnAsDiff"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 147745 "pixR"
	public explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 147873 "reportProgress"
	public explicit_type "bool (*)(const char*, void *reportObject)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
	bool (*${name})(const char*, void *reportObject)${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 148001 "reportProgressDlg"
	public explicit_type "wxProgressDialog"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 148129 "reportInterval"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 148257 "reportObject"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 148385 "volume"
	public explicit_type "double"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 148513 "increasing"
	public explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 157089 "ParFit"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
        maxiter = 3000;
        tolerance = 0.0;
        maxThickness = 1e5;
        bSlopeLimit = false;
        dSlopeLimit = 0.0;
        deepening = ParFit::normal;
        mindiff = 0.1;
        returnAsDiff = false;
        pixR = 1.5;
        reportInterval = 100;
        reportObject = NULL;
        reportProgress = NULL;
        reportProgressDlg = NULL;
        volume = 0.0;
        increasing = false;
    };
"
	
	
	
	
      end
    end

    class 138785 "DynArray"
      visibility package 
      nformals 1
      formal name "T" type "class" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 156449 "DynArray"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "rows" explicit_type "int"
	  param in name "cols" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} {
		d = (T *) CPLMalloc(sizeof(T)*rows*cols);
		nCols = cols;
		nRows = rows;
	};
"
	
	
	
	
      end

      operation 156577 "~DynArray"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
		CPLFree( d );
	};
"
	
	
	
	
      end

      operation 156705 "copy"
	cpp_inline public return_type class_ref 138785 // DynArray
	nparams 1
	  param in name "o" type class_ref 138785 // DynArray
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
		//Must have the same dimensions
		memcpy( d, o.d, sizeof(T)*nRows*nCols );
		return *this;
	};
"
	
	
	
	
      end

      operation 156833 "operator []"
	cpp_inline public explicit_return_type "T"
	nparams 1
	  param in name "r" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
		return d + nCols * r;
	};
"
	
	
	
	
      end

      operation 156961 "operator []"
	const cpp_inline public explicit_return_type "T"
	nparams 1
	  param in name "r" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
		return d + nCols * r;
	};
"
	
	
	
	
      end

      attribute 146593 "d"
	private explicit_type "T"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 138913 "enumCommand"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 148641 "dem2rgb"
	public type class_ref 138913 // enumCommand
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 148769 "demfit"
	public type class_ref 138913 // enumCommand
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 148897 "demtest"
	public type class_ref 138913 // enumCommand
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 149025 "demmatterock"
	public type class_ref 138913 // enumCommand
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 139041 "enumMethod"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 149153 "SLBL"
	public type class_ref 139041 // enumMethod
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 149281 "planefit"
	public type class_ref 139041 // enumMethod
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 149409 "LIP"
	public type class_ref 139041 // enumMethod
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 139169 "enumOutputType"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 149537 "single"
	public type class_ref 139169 // enumOutputType
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 149665 "multi"
	public type class_ref 139169 // enumOutputType
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 149793 "both"
	public type class_ref 139169 // enumOutputType
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 139297 "demexception"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "void getDEMFitOpts( po::options_description &desc, ParFit &param );"
      classrelation 138273 // <generalisation>
	relation 138273 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 138273 // <generalisation>
	  b parent class_ref 139425 // typedef12
      end

      operation 157217 "demexception"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "m" explicit_type "string"
	  param in name "o" explicit_type "string"
	    defaultvalue "\"\" "
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : msg(m), opt(o) { };
"
	
	
	
	
      end

      operation 157345 "~demexception"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 157473 "what"
	const cpp_virtual cpp_inline public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return msg.c_str(); };
"
	
	
	
	
      end

      operation 157601 "getOpt"
	cpp_inline public explicit_return_type "string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return opt; };
"
	
	
	
	
      end
    end

    class 139425 "typedef12"
      visibility package stereotype "typedef" explicit_base_type "exception"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 139553 "sReportMF"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "#include <boost/format.hpp>
ParFit::ParFit() : bSlopeLimit(false), tolerance( 0 ), maxThickness( 1e5 )
	, deepening( ParFit::normal ), mindiff( .1 ), pixR( 1.5 ), maxiter( 3000 )
	, reportProgress( NULL ), reportInterval( 100 ), reportObject( NULL )
    , increasing(false) {} 
void getDEMFitOpts( po::options_description &desc, ParFit &param ) {
	desc.add_options()
		(\"input-DEM\", po::value<string>(), \"Input DEM filename\")
		(\"input-DEM-lower-limit\", po::value<string>(), \"Input lower limit DEM filename\")
		(\"input-mask-raster\", po::value<string>(), \"Mask raster filename\")
		(\"input-mask-shape\", po::value<string>(), \"Mask shape filename\")
		(\"output-mask-raster\", po::value<string>(), \"Rasterized mask output filename\")
		(\"output-DEM\", po::value<string>(), \"Output DEM filename\")
		(\"output-DEM-diff\", po::value<string>(), \"Output DEM difference filename\")
		(\"output-RGB\", po::value<string>(), \"Output RGB filename\")
		(\"demfit.method\", po::value<string>(), ((string) \"Method for fitting: \" + enumStringsMethod[SLBL] + \" | \" + enumStringsMethod[planefit] + \" | \" + enumStringsMethod[LIP]).c_str())
		(\"demfit.mindiff\", po::value<double>(&param.mindiff)->default_value(param.mindiff), \"Stop computing when no difference is greater than this value\")
		(\"demfit.maxiter\", po::value<int>(&param.maxiter)->default_value(param.maxiter), \"Maximum number of iterations\")
		(\"demfit.slopelimit\", po::value<double>(&param.dSlopeLimit), \"Slope limit (degrees)\")
		(\"demfit.maxthickness\", po::value<double>(&param.maxThickness)->default_value(param.maxThickness), \"Maximum thickness\")
		(\"demfit.multi-feature\", \"Process each feature of mask shape separately\")
		(\"demfit.output-DEM-type\", po::value<string>(), ((string) \"Output DEM type when multi-feature enabled: \" + enumStringsOutputType[single] + \" | \" + enumStringsOutputType[multi] + \" | \" + enumStringsOutputType[both]).c_str())
		(\"demfit.SHP-volume-field\", po::value<string>(), \"Shape Field name to save volume differences when multi-feature enabled\")
		(\"demfit.increasing\", \"Make height values increase instead of decrease\")
		(\"SLBL.tolerance\", po::value<double>(&param.tolerance)->default_value(param.tolerance), \"SLBL tolerance value\")
		(\"SLBL.notdeepening\", \"SLBL mode not deepening\")
		(\"planefit.radius\", po::value<double>(&param.pixR)->default_value(param.pixR), \"Radius in pixels for plane fitting\")
		(\"matterock.options-file\", po::value<string>(), \"File with options for Matterock\")
	;
}

string appendNumber( const string &input, int number, const string &ext = \".tif\" ) {
	if( input.length() > ext.length() && !input.compare( input.length() - ext.length(), ext.length(), ext ) )
		return (boost::format( \"%s-%04d%s\" ) % input.substr(0, input.length() - ext.length()) % number % ext).str();
	else
		return (boost::format( \"%s-%04d%s\" ) % input % number % ext).str();
}"
      attribute 149921 "reportProgress"
	public explicit_type "bool (*)(const char*, void *reportObject)"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}
	bool (*${name})(const char*, void *reportObject)${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 150049 "reportObject"
	public explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 150177 "msg"
	public explicit_type "string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end
  end

  deploymentview 134689 "core"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 136225 "demutil"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 138785 // DynArray
      end
    end

    artifact 136353 "demutilopts"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 135201 // ParFit
	class_ref 138913 // enumCommand
	class_ref 139041 // enumMethod
	class_ref 139169 // enumOutputType
	class_ref 139425 // typedef12
	class_ref 139297 // demexception
      end
    end

    artifact 136481 "sReportMF"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 139553 // sReportMF
      end
    end
  end
end
