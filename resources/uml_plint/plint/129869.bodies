class PlIntViewerOverlay
!!!140749.cpp!!!	PlIntViewerOverlay(inout viewer : vrViewerDisplay, in name : wxString = PLINT_OVERLAY_NAME)
    m_Display = viewer;
!!!140877.cpp!!!	~PlIntViewerOverlay()
    ClearPoints();
!!!141005.cpp!!!	GetPixelPoint(in index : int) : wxPoint
    wxPoint myReturnPxPt = wxDefaultPosition;
    if (index < 0 || index  >= m_Pts.GetCount() ) {
        wxLogError(_("Index out of bounds!"));
        return myReturnPxPt;
    }
    
    wxASSERT(m_Display);
    m_Display->GetCoordinate()->ConvertToPixels(*m_Pts[index], myReturnPxPt);
    return myReturnPxPt;
!!!141133.cpp!!!	AddPixelPoint(in pxpoint : wxPoint, in refresh : bool = false) : bool
    if (m_Pts.GetCount() >= 3) {
        return false;
    }
    
    wxPoint2DDouble myRealPt = wxDefaultPosition;
    wxASSERT(m_Display);
    m_Display->GetCoordinate()->ConvertFromPixels(pxpoint, myRealPt);
    m_Pts.push_back(new wxPoint2DDouble(myRealPt));
    
    if (refresh == true){
        m_Display->Refresh();
        m_Display->Update();
    }
    
    return true;
!!!141261.cpp!!!	ClearPoints(in refresh : bool = false) : void
    m_Pts.DeleteContents(true);
    m_Pts.clear();
    
    if (refresh == true) {
        m_Display->Refresh();
        m_Display->Update();
    }
!!!141389.cpp!!!	DrawOverlay(inout dc : wxPaintDC) : bool
    wxASSERT(dc);
    wxPen myPen (PLINT_OVERLAY_COLOR, PLINT_OVERLAY_SIZE);
    dc->SetPen(myPen);
    
    
    for (unsigned int i = 0; i< m_Pts.GetCount(); i++) {
        wxPoint myPt = GetPixelPoint(i);
        if (myPt == wxDefaultPosition) {
            continue;
        }
        if (i == 2) {
            dc->SetPen(wxPen(PLING_OVERLAY_COLOR2, PLINT_OVERLAY_SIZE));
        }
        
#ifdef __WXMSW__
        dc->DrawLine(myPt.x, myPt.y, myPt.x + 0.1, myPt.y + 0.1);
#else
        dc->DrawLine(myPt.x, myPt.y, myPt.x, myPt.y);
#endif
    }
    return true;
